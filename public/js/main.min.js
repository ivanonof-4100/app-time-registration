// @ts-nocheck
require.config({enforceDefine:!1,baseUrl:"/js/",paths:{bootstrapScript:["/bootstrap/bootstrap-5.3.3-dist/js/bootstrap.bundle.min"],themeScript:["/js/theme_colormodes.min"],cookieScript:["/js/cookie.min"],domReady:["/js/requirejs/modules/domReady.min"]}});let sprintf=function(e){let t=arguments,o=!0,s=1;return str=e.replace(/%s/g,(function(){let e=t[s++];return void 0===e?(o=!1,""):e})),o?str:""},isInBodyElement=function(e){return e!==document.body&&document.body.contains(e)};require(["themeScript"],(function(e){window.matchMedia("(prefers-color-scheme:light)").addEventListener("change",(e=>{if(e.matches){const e="auto";setStoredTheme(e),setTheme(e)}}))})),require(["domReady!","cookieScript","bootstrapScript","themeScript"],(function(e,t,o,s){e.querySelector("#btn_scroll_up").addEventListener("click",(e=>{e.preventDefault(),window.scrollTo(0,0)}));[...e.querySelectorAll('[data-bs-toggle="tooltip"]')].map((e=>new o.Tooltip(e)));const i=e.querySelector("#cookie_alert");if(i){e.querySelector("#btn_cookie_toggle").addEventListener("click",(function(e){e.preventDefault(),i.classList.remove("invisible"),i.classList.add("show"),i.offsetHeight,window.dispatchEvent(new Event("cookieAlertToggleEvent"))}));e.querySelector("#btn_accept_cookies").addEventListener("click",(function(){setCookie("acceptCookies",!0,1),localStorage.setItem("acceptCookies_wasSet",!0),i.classList.remove("show"),i.offsetHeight,window.dispatchEvent(new Event("cookieAcceptEvent"))}));e.querySelector("#btn_decline_cookies").addEventListener("click",(function(){setCookie("acceptCookies",!1,1),localStorage.setItem("acceptCookies_wasSet",!0),i.classList.remove("show"),i.offsetHeight,window.dispatchEvent(new Event("cookieDeclineEvent"))}))}else console.log('Cookie-alert was NOT found, you need an UI-element with id="cookie_alert" ...');isCookiesEnabled()||(e.getElementById("cookies_not_enabled").innerHTML="We dected that use of cookies was disabled, please enable it in your web-browser ..."),window.localStorage.getItem("acceptCookies_wasSet")?(i.classList.remove("show"),i.classList.add("invisible"),i.offsetHeight):(i.classList.remove("invisible"),i.classList.add("show"),i.offsetHeight);const c=getStoredTheme();if(null===c){const e="auto";setStoredTheme(e),setTheme(e)}else setTheme(c);e.querySelectorAll('input[type="radio"][data-bs-theme-value]').forEach((e=>{e.addEventListener("click",(t=>{const o=e.getAttribute("data-bs-theme-value");window.console.log("Selected theme: "+o),setStoredTheme(o),setTheme(o)}))}))}));